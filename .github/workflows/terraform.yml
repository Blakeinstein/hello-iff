name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Format
        id: fmt
        uses: hashicorp/terraform-github-actions/fmt@v0.8.0
        env:
          TF_ACTION_WORKING_DIR: 'build'

      - name: Terraform Init
        id: init
        uses: hashicorp/terraform-github-actions/init@v0.8.0
        env:
          TF_ACTION_WORKING_DIR: 'build'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - name: Terraform Validate
        id: validate
        uses: hashicorp/terraform-github-actions/validate@v0.8.0
        env:
          TF_ACTION_WORKING_DIR: 'build'

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        uses: hashicorp/terraform-github-actions/plan@v0.8.0
        env:
          TF_ACTION_WORKING_DIR: 'build'
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ÔøΩÔøΩÔøΩ\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§î\`${{ steps.validate.outcome }}\`
            #### Terraform Plan ü™∂\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`\n
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: hashicorp/terraform-github-actions/apply@v0.8.0
        env:
          TF_ACTION_WORKING_DIR: 'build'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Sync S3
        uses: jakejarvis/s3-sync-action@master
        env:
          SOURCE_DIR: './build'
          AWS_REGION: ${{ secrets.AWS_TF_S3_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_TF_S3_STATE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
